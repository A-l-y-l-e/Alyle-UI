variables:
  YARN_CACHE_FOLDER: $(Pipeline.Workspace)/.yarn

jobs:
- job: DeployInfo
  displayName: Publish Deploy Info
  pool:
    vmImage: 'Ubuntu 16.04'
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '12.13.x'
  - script: |
      set -e
      curl -o- -L https://yarnpkg.com/install.sh | bash
    displayName: "Install Yarn"
  - task: CacheBeta@1
    inputs:
      key: yarn | $(Agent.OS) | yarn.lock
      path: $(YARN_CACHE_FOLDER)
    displayName: "Cache Yarn packages"
  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: |
        set -e
        yarn --frozen-lockfile
      noRc: false
    displayName: "Install Dependencies"
  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: |
        set -e -o pipefail

        . ci/setup.sh

        export MSG=$(ts-node tools/src/commit-msg)
        export SHA=$(node -pe 'const {env}=process;env.SYSTEM_PULLREQUEST_SOURCECOMMITID || env.BUILD_SOURCEVERSION')
        mkdir dist/info -p
        echo $MSG > ./dist/info/MSG
        echo $SHA > ./dist/info/SHA
        echo MSG$MSG
        echo SHA$SHA
      noRc: false
    displayName: "Write data"
  - task: PublishPipelineArtifact@1
    inputs:
      artifact: DeployInfo
      path: 'dist/info'
