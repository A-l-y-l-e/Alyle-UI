{
  "pkg": "@alyle/ui/image-cropper",
  "name": "LyImageCropper",
  "symbol": "Component",
  "code": "<pre class=\"ttb\"><code prsm class=\"ttm\">@<span class=\"tt18 tta3\">Component</span><span class=\"tt18 ttae\">(</span><span class=\"tt18 ttae\">&#123;</span>\n    changeDetection<span class=\"tt18 ttb0\">:</span> ChangeDetectionStrategy<span class=\"tt18 ttae\">.</span>OnPush<span class=\"tt18 ttae\">,</span>\n    preserveWhitespaces<span class=\"tt18 ttb0\">:</span> <span class=\"tt18 boolean\">false</span><span class=\"tt18 ttae\">,</span>\n    selector<span class=\"tt18 ttb0\">:</span> <span class=\"tt18 tt3z\">'ly-img-cropper, ly-image-cropper'</span><span class=\"tt18 ttae\">,</span>\n    templateUrl<span class=\"tt18 ttb0\">:</span> <span class=\"tt18 tt3z\">'image-cropper.html'</span>\n<span class=\"tt18 ttae\">&#125;</span><span class=\"tt18 ttae\">)</span>\n<span class=\"tt18 tt1j\">export</span> <span class=\"tt18 tt1j\">class</span> <span class=\"tt18 ttc8\">LyImageCropper</span> <span class=\"tt18 tt1j\">implements</span> <span class=\"tt18 ttc8\">OnDestroy</span> <span class=\"tt18 ttae\">&#123;</span>\n    <span class=\"tt18 tt1j\">static</span> <span class=\"tt18 tt1j\">readonly</span> Ð¸ <span class=\"tt18 ttb0\">=</span> <span class=\"tt18 tt3z\">'LyImageCropper'</span>\n    <span class=\"tt18 tt3o\">/** When is loaded image &amp; ready for crop */</span>\n    isLoaded<span class=\"tt18 ttb0\">:</span> <span class=\"tt18 ttcj\">boolean</span>\n    isCropped<span class=\"tt18 ttb0\">:</span> <span class=\"tt18 ttcj\">boolean</span>\n    @<span class=\"tt18 tta3\">Input</span><span class=\"tt18 ttae\">(</span><span class=\"tt18 ttae\">)</span>\n    <span class=\"tt18 tt1j\">get</span> <span class=\"tt18 tta3\">config</span><span class=\"tt18 ttae\">(</span><span class=\"tt18 ttae\">)</span><span class=\"tt18 ttb0\">:</span> ImgCropperConfig\n    <span class=\"tt18 tt1j\">set</span> <span class=\"tt18 tta3\">config</span><span class=\"tt18 ttae\">(</span>val<span class=\"tt18 ttb0\">:</span> ImgCropperConfig<span class=\"tt18 ttae\">)</span>\n    <span class=\"tt18 tt3o\">/** Set scale */</span>\n    @<span class=\"tt18 tta3\">Input</span><span class=\"tt18 ttae\">(</span><span class=\"tt18 ttae\">)</span>\n    <span class=\"tt18 tt1j\">get</span> <span class=\"tt18 tta3\">scale</span><span class=\"tt18 ttae\">(</span><span class=\"tt18 ttae\">)</span><span class=\"tt18 ttb0\">:</span> <span class=\"tt18 ttcj\">number</span> <span class=\"tt18 ttb0\">|</span> <span class=\"tt18 tt1j\">undefined</span>\n    <span class=\"tt18 tt1j\">set</span> <span class=\"tt18 tta3\">scale</span><span class=\"tt18 ttae\">(</span>val<span class=\"tt18 ttb0\">:</span> <span class=\"tt18 ttcj\">number</span> <span class=\"tt18 ttb0\">|</span> <span class=\"tt18 tt1j\">undefined</span><span class=\"tt18 ttae\">)</span>\n    <span class=\"tt18 tt3o\">/**\n     * Emit event `error` if the file size for the limit.\n     * Note: It only works when the image is received from the `&lt;input>` event.\n     */</span>\n    @<span class=\"tt18 tta3\">Input</span><span class=\"tt18 ttae\">(</span><span class=\"tt18 ttae\">)</span>\n    maxFileSize<span class=\"tt18 ttb0\">:</span> <span class=\"tt18 ttcj\">number</span>\n    <span class=\"tt18 tt3o\">/** Get min scale */</span>\n    <span class=\"tt18 tt1j\">get</span> <span class=\"tt18 tta3\">minScale</span><span class=\"tt18 ttae\">(</span><span class=\"tt18 ttae\">)</span><span class=\"tt18 ttb0\">:</span> <span class=\"tt18 ttcj\">number</span> <span class=\"tt18 ttb0\">|</span> <span class=\"tt18 tt1j\">undefined</span>\n    @<span class=\"tt18 tta3\">Output</span><span class=\"tt18 ttae\">(</span><span class=\"tt18 ttae\">)</span>\n    <span class=\"tt18 tt1j\">readonly</span> scaleChange <span class=\"tt18 ttb0\">=</span> <span class=\"tt18 tt1j\">new</span> <span class=\"tt18 ttc8\">EventEmitter</span><span class=\"tt18 ttb0\">&lt;</span><span class=\"tt18 ttcj\">number</span><span class=\"tt18 ttb0\">></span><span class=\"tt18 ttae\">(</span><span class=\"tt18 ttae\">)</span>\n    <span class=\"tt18 tt3o\">/** Emits when the image is ready for cropper */</span>\n    @<span class=\"tt18 tta3\">Output</span><span class=\"tt18 ttae\">(</span><span class=\"tt18 ttae\">)</span>\n    <span class=\"tt18 tt1j\">readonly</span> loaded <span class=\"tt18 ttb0\">=</span> <span class=\"tt18 tt1j\">new</span> <span class=\"tt18 ttc8\">EventEmitter</span><span class=\"tt18 ttb0\">&lt;</span>ImgCropperEvent<span class=\"tt18 ttb0\">></span><span class=\"tt18 ttae\">(</span><span class=\"tt18 ttae\">)</span>\n    <span class=\"tt18 tt3o\">/** On crop new image */</span>\n    @<span class=\"tt18 tta3\">Output</span><span class=\"tt18 ttae\">(</span><span class=\"tt18 ttae\">)</span>\n    <span class=\"tt18 tt1j\">readonly</span> cropped <span class=\"tt18 ttb0\">=</span> <span class=\"tt18 tt1j\">new</span> <span class=\"tt18 ttc8\">EventEmitter</span><span class=\"tt18 ttb0\">&lt;</span>ImgCropperEvent<span class=\"tt18 ttb0\">></span><span class=\"tt18 ttae\">(</span><span class=\"tt18 ttae\">)</span>\n    <span class=\"tt18 tt3o\">/** Emit an error when the loaded image is not valid */</span>\n    @<span class=\"tt18 tta3\">Output</span><span class=\"tt18 ttae\">(</span><span class=\"tt18 ttae\">)</span>\n    <span class=\"tt18 tt1j\">readonly</span> error <span class=\"tt18 ttb0\">=</span> <span class=\"tt18 tt1j\">new</span> <span class=\"tt18 ttc8\">EventEmitter</span><span class=\"tt18 ttb0\">&lt;</span>ImgCropperErrorEvent<span class=\"tt18 ttb0\">></span><span class=\"tt18 ttae\">(</span><span class=\"tt18 ttae\">)</span>\n    <span class=\"tt18 tta3\">ngOnDestroy</span><span class=\"tt18 ttae\">(</span><span class=\"tt18 ttae\">)</span>\n    <span class=\"tt18 tta3\">selectInputEvent</span><span class=\"tt18 ttae\">(</span>img<span class=\"tt18 ttb0\">:</span> Event<span class=\"tt18 ttae\">)</span>\n    <span class=\"tt18 tt3o\">/** Set the size of the image, the values can be 0 between 1, where 1 is the original size */</span>\n    <span class=\"tt18 tta3\">setScale</span><span class=\"tt18 ttae\">(</span>size<span class=\"tt18 ttb0\">?</span><span class=\"tt18 ttb0\">:</span> <span class=\"tt18 ttcj\">number</span><span class=\"tt18 ttae\">,</span> noAutoCrop<span class=\"tt18 ttb0\">?</span><span class=\"tt18 ttb0\">:</span> <span class=\"tt18 ttcj\">boolean</span><span class=\"tt18 ttae\">)</span>\n    <span class=\"tt18 tt3o\">/**\n     * Ajustar a la pantalla\n     */</span>\n    <span class=\"tt18 tta3\">fitToScreen</span><span class=\"tt18 ttae\">(</span><span class=\"tt18 ttae\">)</span>\n    <span class=\"tt18 tta3\">fit</span><span class=\"tt18 ttae\">(</span><span class=\"tt18 ttae\">)</span>\n    <span class=\"tt18 tta3\">updatePosition</span><span class=\"tt18 ttae\">(</span>x<span class=\"tt18 ttb0\">?</span><span class=\"tt18 ttb0\">:</span> <span class=\"tt18 ttcj\">number</span><span class=\"tt18 ttae\">,</span> y<span class=\"tt18 ttb0\">?</span><span class=\"tt18 ttb0\">:</span> <span class=\"tt18 ttcj\">number</span><span class=\"tt18 ttae\">)</span>\n    <span class=\"tt18 tt3o\">/**+ */</span>\n    <span class=\"tt18 tta3\">zoomIn</span><span class=\"tt18 ttae\">(</span><span class=\"tt18 ttae\">)</span>\n    <span class=\"tt18 tt3o\">/** Clean the img cropper */</span>\n    <span class=\"tt18 tta3\">clean</span><span class=\"tt18 ttae\">(</span><span class=\"tt18 ttae\">)</span>\n    <span class=\"tt18 tt3o\">/**- */</span>\n    <span class=\"tt18 tta3\">zoomOut</span><span class=\"tt18 ttae\">(</span><span class=\"tt18 ttae\">)</span>\n    <span class=\"tt18 tta3\">center</span><span class=\"tt18 ttae\">(</span><span class=\"tt18 ttae\">)</span>\n    <span class=\"tt18 tt3o\">/**\n     * Load Image from URL\n     * @param src URL\n     * @param fn function that will be called before emit the event loaded\n     */</span>\n    <span class=\"tt18 tta3\">setImageUrl</span><span class=\"tt18 ttae\">(</span>src<span class=\"tt18 ttb0\">:</span> <span class=\"tt18 ttcj\">string</span><span class=\"tt18 ttae\">,</span> fn<span class=\"tt18 ttb0\">?</span><span class=\"tt18 ttb0\">:</span> <span class=\"tt18 ttae\">(</span><span class=\"tt18 ttae\">)</span> <span class=\"tt18 ttb0\">=></span> <span class=\"tt18 tt1j\">void</span><span class=\"tt18 ttae\">)</span>\n    <span class=\"tt18 tta3\">rotate</span><span class=\"tt18 ttae\">(</span>degrees<span class=\"tt18 ttb0\">:</span> <span class=\"tt18 ttcj\">number</span><span class=\"tt18 ttae\">)</span>\n    <span class=\"tt18 tt3o\">/**\n     * Crop Image\n     * Resize &amp; crop image\n     */</span>\n    <span class=\"tt18 tta3\">crop</span><span class=\"tt18 ttae\">(</span>config<span class=\"tt18 ttb0\">?</span><span class=\"tt18 ttb0\">:</span> ImgCropperConfig<span class=\"tt18 ttae\">)</span><span class=\"tt18 ttb0\">:</span> ImgCropperEvent\n<span class=\"tt18 ttae\">&#125;</span></code></pre>"
}