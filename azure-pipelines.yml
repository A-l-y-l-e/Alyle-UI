variables:
  YARN_CACHE_FOLDER: $(Pipeline.Workspace)/.yarn

pr: none

jobs:
- job: BuildApp
  displayName: Build App
  pool:
    vmImage: 'Ubuntu 16.04'
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '10.12.x'
  - script: |
      curl -o- -L https://yarnpkg.com/install.sh | bash
    displayName: "Install Yarn"
  - script: |
      printenv
      commit=$(curl https://api.github.com/repos/${BUILD_REPOSITORY_NAME}/commits/${SYSTEM_PULLREQUEST_SOURCECOMMITID})
      echo $(${commit} | node -pe 'JSON.parse(fs.readFileSync(0)).commit.message') > ./ci/scripts/msg
    displayName: "Write msg"
  - task: CacheBeta@1
    inputs:
      key: yarn | $(Agent.OS) | yarn.lock
      path: $(YARN_CACHE_FOLDER)
    displayName: "Cache Yarn packages"
  - script: |
      yarn
      yarn tools:prepare-lib
      yarn ng build alyle-ui --aot --output-path dist/alyle-ui-aot
      yarn build
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: 'dist/alyle-ui'
      artifactName: Alyle UI App
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: 'ci/scripts'
      artifactName: Scripts

- job: BuildDocsAndArtifacts
  displayName: Build docs & artifacts
  pool:
    vmImage: 'Ubuntu 16.04'
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '10.12.x'
  - bash: |
      chmod +x ./ci/scripts/build-docs-artifacts.sh
      ./ci/scripts/build-docs-artifacts.sh
    displayName: build:@alyle/ui
  - script: |
      yarn tools:docs
    displayName: Build docs-content
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: 'dist/docs-content'
      artifactName: Docs
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: 'dist/@alyle/ui'
      artifactName: alyle-ui-pkg
