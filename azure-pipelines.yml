variables:
  YARN_CACHE_FOLDER: $(Pipeline.Workspace)/.yarn

trigger:
- master

jobs:
- job: BuildApp
  displayName: Build App
  pool:
    vmImage: 'Ubuntu 16.04'
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '12.13.x'
  - script: |
      curl -o- -L https://yarnpkg.com/install.sh | bash
    displayName: "Install Yarn"
  - bash: |
      set -e
      source ./ci/setup.sh
      export MSG=$(ts-node tools/src/commit-msg)
      export SHA=$(node -pe 'const {env}=process;env.SYSTEM_PULLREQUEST_SOURCECOMMITID || env.BUILD_SOURCEVERSION')
      echo $MSG > ./ci/scripts/MSG
      echo $SHA > ./ci/scripts/SHA
    displayName: "Write data"
  - task: CacheBeta@1
    inputs:
      key: yarn | $(Agent.OS) | yarn.lock
      path: $(YARN_CACHE_FOLDER)
    displayName: "Cache Yarn packages"
  - bash: |
      set -e
      source ./ci/setup.sh
      yarn --frozen-lockfile
      export MSG=$(ts-node tools/src/commit-msg)
      ts-node tools/*/bump-version.ts
      yarn global add serve
      yarn tools:prepare-lib
      ./ci/scripts/build-style-compiler.sh
      node dist/@alyle/ui/style-compiler/main src
      # yarn ng build alyle-ui --aot --output-path dist/alyle-ui-aot
      yarn build
    displayName: 'Build App'
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: 'dist/alyle-ui'
      artifactName: Alyle UI App
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: 'ci/scripts'
      artifactName: Scripts

- job: BuildDocsAndArtifacts
  displayName: Build docs & artifacts
  pool:
    vmImage: 'Ubuntu 16.04'
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '12.13.x'
  - bash: |
      ./ci/scripts/build-docs-artifacts.sh
    displayName: build:@alyle/ui
  - script: |
      yarn tools:docs
    displayName: Build docs-content
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: 'dist/docs-content'
      artifactName: Docs
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: 'dist/@alyle/ui'
      artifactName: alyle-ui-pkg
